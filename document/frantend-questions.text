浏览器
1、浏览器静态资源优化手段（js、css、image、离线网站）
2、javascript标签type defer async 的区别, 有什么应用场景
3、css 使用 link标签映入  与在样式表内使用@import引入有什么区别
4、如何实现一个sso联合登录， 在soo登录的基础上如何实现单点登录（同域名/跨域名），（互斥的单点登录与互通的单点登录）
5、websoket、webwork、svg、canvas、
6、什么是option请求、option请求有什么作用
7、put、post请求的区别
8、原生的ajax请求分为几步、状态吗分别代表什么意思、如何终止pendding状态的请求、日常项目中使用的请求类库（axios、对于拦截器的使用、错误处理） 
9、浏览器上下载文件应该怎么操作（a/window.open）加入使用ajax请求如何下载
10、跨页签通讯、有几种方式
11、link标签的rel属性 prefetch
12、跨域、解决跨域, sesstionStorage  localstorage 区别
13、如何优化资源加载 img与background使用图片有什么区别

css
1、父元素高度不确定的情况下，如何确保子元素垂直居中
2、如何使用css实现一个环形进度条
3、如何定义一个 animation， from to  百分比的含义， 怎么使用一个animation
4、transition过渡 有哪几个规则、分别是什么意思
5、transform有哪几种变换规则、变换的坐标系是基于什么、变换前后是否有什么影响、开启变换的元素内部定位子元素是基于什么坐标系定位的
6、元素在使用百分比单位的时候都是相对于谁、定位后相对与谁、变换中百分比单位相对于谁
7、css3还提供了什么其他的哪些新的样式（圆角、阴影、渐变、边框背景、背景裁剪）
8、flex布局 中flex：1 是什么意思
9、是否使用过预编译工具、如何利用预编译工具里的变量
10、在vue中是如何实现样式作用域隔离的  scope

js
1、js中的继承、如何实现一个子类继承一个父类、在es6中如何实现
2、es5中 如何利用父类构造函数增强子类、在普通继承中通常其中一个实例修改原型上的属性或者方法时会影响其他实例、怎么解决这个问题
3、作用域（词法作用域）、
4、上下文（函数调用上下文是如何确定的）、
5、调用栈（调用栈能为调试带来哪些帮助、为什么很多规范中都不建议使用匿名函数）、
6、事件队列、定时器（定时器什么情况下会不准时）事件回调与定时器回调是同一个队列吗、执行是否有先后顺序、
7、js数组去重、找最大最小、js正则的关键字、数组常用方法、对应方法返回值、哪些方法会影响原数组
8、对一个字符串进行反转、对一个数组中的对象的某个属性值求和、或者拼接
9、js的垃圾回收机制、
10、commonJS模块化与es模块化有什么区别

typescript
1、ts有哪些基础类型
2、ts中的接口是什么意思
3、ts中的泛型与枚举

vue框架部分
1、模板基础指令、动态绑定css样式
2、内置组件、混合类、依赖注入
3、data为什么必须是一个函数返回一个对象，data如何添加一个响应式属性， 
4、vue2中对数组做了哪些特殊处理，我们对数组的哪些操作vue2的响应式监听不到，如何解决
5、vue中对于v-for循环要求必须添加一个key，有什么作用
6、vue中的slot插槽的编译作用域是父组件还是子组件， 如何获得子组件中的状态
7、vue2.6添加的attr与listener有什么作用
8、vue中的计算属性与方法有什么区别
9、vue3中的响应式是如何实现的，es6的proxy代理有没有了解过，能够拦截哪些操作
10、在vue一些重复的工作如何封装代码进行复用
11、在vue中如何快捷引入使用一些工具函数

vue rouer
1、动态路由、动态路由传参（:id）
2、模式 hash history, hash模式下使用a链接的锚点定位会出现什么问题， history模式下部署上线后404问题如何解决
3、全局导航守卫， 组件级守卫、路由级守卫，守卫有什么作用

vuex
1、基本配置，为什么有了action，还需要mutation
2、刷新数据丢失

移动端
1、如何进行屏幕适配、适配方案及原理
2、移动端浏览器如何与os进行交互（比如访问定位、摄像头、相册、通讯录）

工具链部分
1、vscode 代码风格管理 eslint使用及配置    格式化代码快捷键
2、vscode 代码调试工具 vscode集成的node调试   浏览器断点调试   vue开发者工具（googal插件）
3、版本控制工具 git  svn   代码冲突如何解决   svn删除文件时有什么主意事项
4、webpack基本配置、webpack基本原理、webpack的运行时是如何模拟js中的模块化的、webpack打包优化有没有处理过（构建速度优化、构建体积优化、思路：求同存异）

项目经验
1、如何解决项目中权限控制（页面级、细粒度的按钮级）
2、如何进行大文件上传
3、如何在跳转路由后回到页面顶部
4、如何状态保持（keep-alive、如何配置keep-alive）、如何取消状态保持（清空父组件当中缓存的对应组件实例）
5、如何解决相同路由重复进入时的报错
6、动态注册的路由所对应的组件在构建过程中是如何加入打包过程的
7、使用字体图标时存在哪些兼容性问题、大量使用svg图标时有没有什么方便的使用方案（postcss）
8、对于http站点升级https站点存在什么问题，前端需要处理什么问题
9、如果要做一个三端响应式的站点，什么样的站点可以做三端响应式，如果做三端响应式需要具备什么样的条件